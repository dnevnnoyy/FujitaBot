import json
import os

import discord
from discord import Embed, Option, TextChannel, Role, Interaction, ButtonStyle
from discord.ext import commands
from dotenv import load_dotenv

from utility import load_channel_roles, save_channel_roles, moder_only, load_moder_roles, \
    save_moder_roles
from views import ActivityView, active_events

load_dotenv()
TOKEN = os.getenv('TOKEN')
bot = commands.Bot(command_prefix="!", intents=discord.Intents.all())


@bot.event
async def on_ready():
    print(f"–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∫–∞–∫ {bot.user.name}")


@bot.slash_command(name="moder_set", description="–ù–∞–∑–Ω–∞—á–∏—Ç—å —Ä–æ–ª—å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—Å–∫–æ–π")
@commands.has_permissions(administrator=True)  # —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω —Å–µ—Ä–≤–µ—Ä–∞
async def moder_set(ctx, role: discord.Role):
    data = load_moder_roles()
    guild_id = str(ctx.guild.id)

    if guild_id not in data:
        data[guild_id] = []

    if role.id not in data[guild_id]:
        data[guild_id].append(role.id)
        save_moder_roles(data)
        await ctx.respond(f"‚úÖ –†–æ–ª—å {role.mention} –¥–æ–±–∞–≤–ª–µ–Ω–∞ –∫–∞–∫ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—Å–∫–∞—è.", ephemeral=True)
    else:
        await ctx.respond(f"‚ö† –†–æ–ª—å {role.mention} —É–∂–µ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—Å–∫–∞—è.", ephemeral=True)


# --- –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–≤—è–∑–∫–∏ –∫–∞–Ω–∞–ª ‚Üí —Ä–æ–ª—å ---
@bot.slash_command(name="setchrl", description="–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–≤—è–∑–∫—É –∫–∞–Ω–∞–ª ‚Üí —Ä–æ–ª—å –¥–ª—è '–ù–µ –ø—Ä–∏–Ω—è–ª —Ä–µ—à–µ–Ω–∏–µ'")
@moder_only()
async def setchrl(
        ctx,
        channel: Option(TextChannel, description="–ö–∞–Ω–∞–ª"),
        role: Option(Role, description="–†–æ–ª—å –¥–ª—è –ø–æ–ª—è '–ù–µ –ø—Ä–∏–Ω—è–ª —Ä–µ—à–µ–Ω–∏–µ'")
):
    data = load_channel_roles()
    data[str(channel.id)] = role.id
    save_channel_roles(data)
    await ctx.respond(f"‚úÖ –°–≤—è–∑–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞: {channel.mention} ‚Üí {role.mention}", ephemeral=True)


# --- –ö–æ–º–∞–Ω–¥–∞ /create ---
@bot.slash_command(name="create", description="–°–æ–∑–¥–∞—Ç—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å")
@moder_only()
async def create_activity(ctx, title=Option(str, "–ù–∞–∑–≤–∞–Ω–∏–µ", name="–Ω–∞–∑–≤–∞–Ω–∏–µ"), time=Option(str, "–í—Ä–µ–º—è", name="–≤—Ä–µ–º—è")):
    await ctx.defer(ephemeral=True)
    # –ü—Ä–æ–≤–µ—Ä–∫–∞, –µ—Å—Ç—å –ª–∏ –∫–∞–Ω–∞–ª –≤ JSON
    data = load_channel_roles()
    role_id = data.get(str(ctx.channel.id))
    if not role_id:
        await ctx.respond(
            "‚ùå –†–æ–ª—å –¥–ª—è –∫–∞–Ω–∞–ª–∞ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞. –°–Ω–∞—á–∞–ª–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /setchrl",
            ephemeral=True
        )
        return

    role = ctx.guild.get_role(role_id)

    # –°–æ–∑–¥–∞—ë–º embed
    embed = Embed(title=title, description=f"–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è: **{time}**", color=0x00ff00)
    embed.add_field(name="‚úÖ –£—á–∞—Å—Ç–≤—É—é", value="‚Äî", inline=True)
    embed.add_field(name="‚ùå –ù–µ —É—á–∞—Å—Ç–≤—É—é", value="‚Äî", inline=True)
    embed.add_field(
        name="üïí –ù–µ –ø—Ä–∏–Ω—è–ª —Ä–µ—à–µ–Ω–∏–µ",
        value="\n".join(f"<@{m.id}>" for m in role.members) if role.members else "‚Äî",
        inline=True
    )

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º embed
    msg = await ctx.send(embed=embed)
    active_events[msg.id] = {
        "going": set(),
        "not_going": set(),
        "role_id": role.id,
        "title": title,
        "time": time
    }
    view = ActivityView(message_id=msg.id, role_id=role.id)
    await msg.edit(view=view)

bot.run(TOKEN)
